// <auto-generated />
using System;
using MECS.Cart.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MECS.Cart.API.Migrations
{
    [DbContext(typeof(CartContext))]
    [Migration("20210713215047_Voucher")]
    partial class Voucher
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MECS.Cart.API.Models.ClientCart", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Descount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("IdClient")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsUsedVoucher")
                        .HasColumnType("bit");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("IdClient")
                        .HasDatabaseName("IDX_Client");

                    b.ToTable("ClientCart");
                });

            modelBuilder.Entity("MECS.Cart.API.Models.ItemCart", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdCart")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdProduct")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Image")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdCart");

                    b.ToTable("ItensCart");
                });

            modelBuilder.Entity("MECS.Cart.API.Models.ClientCart", b =>
                {
                    b.OwnsOne("MECS.Cart.API.Models.Voucher", "Voucher", b1 =>
                        {
                            b1.Property<Guid>("ClientCartId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Codigo")
                                .HasColumnType("varchar(50)")
                                .HasColumnName("VoucherCodigo");

                            b1.Property<decimal?>("Percentual")
                                .HasColumnType("decimal(18,2)")
                                .HasColumnName("Percentual");

                            b1.Property<int>("TipoDesconto")
                                .HasColumnType("int")
                                .HasColumnName("TipoDesconto");

                            b1.Property<decimal?>("ValorDesconto")
                                .HasColumnType("decimal(18,2)")
                                .HasColumnName("ValorDesconto");

                            b1.HasKey("ClientCartId");

                            b1.ToTable("ClientCart");

                            b1.WithOwner()
                                .HasForeignKey("ClientCartId");
                        });

                    b.Navigation("Voucher");
                });

            modelBuilder.Entity("MECS.Cart.API.Models.ItemCart", b =>
                {
                    b.HasOne("MECS.Cart.API.Models.ClientCart", "ClientCart")
                        .WithMany("Itens")
                        .HasForeignKey("IdCart")
                        .IsRequired();

                    b.Navigation("ClientCart");
                });

            modelBuilder.Entity("MECS.Cart.API.Models.ClientCart", b =>
                {
                    b.Navigation("Itens");
                });
#pragma warning restore 612, 618
        }
    }
}
